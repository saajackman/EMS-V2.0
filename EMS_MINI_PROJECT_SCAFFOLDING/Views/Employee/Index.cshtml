@using PagedList;
@using PagedList.Mvc;

@model IPagedList<EMS_MINI_PROJECT_SCAFFOLDING.Models.Employee_174778>

@{

    ViewBag.Title = "Index";
}

<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Bootstrap Order Details Table with Search Filter</title>
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto|Varela+Round">
<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<style type="text/css">
    body {
        /*color: #566787;*/
        color: black;
        background: #f5f5f5;
        font-family: 'Varela Round', sans-serif;
        font-size: 13px;
    }

    a {
        margin-right: 5px;
    }

    table {
        color: black;
    }

    .table-wrapper {
        background: #fff;
        padding: 20px 25px;
        margin: 30px auto;
        border-radius: 3px;
        box-shadow: 0 1px 1px rgba(0,0,0,.05);
    }

        .table-wrapper .btn {
            float: right;
            color: #333;
            background-color: #fff;
            border-radius: 3px;
            border: none;
            outline: none !important;
            margin-left: 10px;
        }

            .table-wrapper .btn:hover {
                color: #333;
                background: #f2f2f2;
            }

            .table-wrapper .btn.btn-primary {
                color: #fff;
                background: #03A9F4;
            }

                .table-wrapper .btn.btn-primary:hover {
                    background: #03a3e7;
                }

    .table-title .btn {
        font-size: 13px;
        border: none;
    }

        .table-title .btn i {
            float: left;
            font-size: 21px;
            margin-right: 5px;
        }

        .table-title .btn span {
            float: left;
            margin-top: 2px;
        }

    .table-title {
        color: #fff;
        background: #4b5366;
        padding: 16px 25px;
        margin: -20px -25px 10px;
        border-radius: 3px 3px 0 0;
    }

        .table-title h2 {
            margin: 5px 0 0;
            font-size: 24px;
        }

    .show-entries select.form-control {
        width: 60px;
        margin: 0 5px;
    }

    .table-filter .filter-group {
        float: right;
        margin-left: 15px;
    }

    .table-filter input, .table-filter select {
        height: 34px;
        border-radius: 3px;
        border-color: #ddd;
        box-shadow: none;
    }

    .table-filter {
        padding: 5px 0 15px;
        border-bottom: 1px solid #e9e9e9;
        margin-bottom: 5px;
    }

        .table-filter .btn {
            height: 34px;
        }

        .table-filter label {
            font-weight: normal;
            margin-left: 10px;
        }

        .table-filter select, .table-filter input {
            display: inline-block;
            margin-left: 5px;
        }

        .table-filter input {
            width: 200px;
            display: inline-block;
        }

    .filter-group select.form-control {
        width: 110px;
    }

    .filter-icon {
        float: right;
        margin-top: 7px;
    }

        .filter-icon i {
            font-size: 18px;
            opacity: 0.7;
        }

    table.table tr th, table.table tr td {
        border-color: #e9e9e9;
        padding: 12px 15px;
        vertical-align: middle;
    }

        table.table tr th:first-child {
            width: 60px;
        }

        table.table tr th:last-child {
            width: 80px;
        }

    table.table-striped tbody tr:nth-of-type(odd) {
        background-color: #fcfcfc;
    }

    table.table-striped.table-hover tbody tr:hover {
        background: #f5f5f5;
    }

    table.table th i {
        font-size: 13px;
        margin: 0 5px;
        cursor: pointer;
    }

    table.table td a {
        font-weight: bold;
        color: #566787;
        display: inline-block;
        text-decoration: none;
    }

        table.table td a:hover {
            color: #2196F3;
        }

        table.table td a.view {
            width: 30px;
            height: 30px;
            color: #2196F3;
            border: 2px solid;
            border-radius: 30px;
            text-align: center;
        }

            table.table td a.view i {
                font-size: 22px;
                margin: 2px 0 0 1px;
            }

    table.table .avatar {
        border-radius: 50%;
        vertical-align: middle;
        margin-right: 10px;
    }

    .status {
        font-size: 30px;
        margin: 2px 2px 0 0;
        display: inline-block;
        vertical-align: middle;
        line-height: 10px;
    }

    .text-success {
        color: #10c469;
    }

    .text-info {
        color: #62c9e8;
    }

    .text-warning {
        color: #FFC107;
    }

    .text-danger {
        color: #ff5b5b;
    }

    .pagination {
        float: right;
        margin: 0 0 5px;
    }

        .pagination li a {
            border: none;
            font-size: 13px;
            min-width: 30px;
            min-height: 30px;
            color: #999;
            margin: 0 2px;
            line-height: 30px;
            border-radius: 2px !important;
            text-align: center;
            padding: 0 6px;
        }

            .pagination li a:hover {
                color: #666;
            }

        .pagination li.active a {
            background: #03A9F4;
        }

            .pagination li.active a:hover {
                background: #0397d6;
            }

        .pagination li.disabled i {
            color: #ccc;
        }

        .pagination li i {
            font-size: 16px;
            padding-top: 6px
        }

    .hint-text {
        float: left;
        margin-top: 10px;
        font-size: 13px;
    }

    th {
        width: 40px;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });
</script>

<div class="container">
    <div class="table-wrapper">
        <div class="table-title">
            <div class="row">
                <div class="col-sm-4">
                    <h2><b>Employee</b></h2>
                </div>
                <div class="col-sm-8">
                    @if (ViewBag.UserType == "S")
                    {
                        <a href="Create" class="btn btn-primary"><i class="material-icons" data-toggle="modal">&#xE147;</i> <span>Add Employee</span></a>
                        <a href="ExportData" class="btn btn-primary"> <i class="material-icons">&#xE24D;</i> <span>Export Data</span></a>
                    }
                </div>
            </div>
        </div>
        <div class="table-filter">
            <div class="row">
                <div class="col-sm-9" style="float:right; ">
                    @using (Html.BeginForm())
                    {
                        <div class="filter-group">
                            <label>Name</label>
                            <input type="text" value="@ViewBag.Keyword" name="keyword" required class="form-control">
                            <input type="submit" value="Search" class="btn btn-primary"><i class="fa fa-search"></i>
                        </div>
                    }
                    <span class="filter-icon"><i class="fa fa-filter"></i></span>
                </div>
            </div>
        </div>

        <table class="table table-striped table-hover" style="table-layout: fixed; width: 100%; ">
            <thead>
                <tr>
                    <th style="width:38px;">
                        @Html.ActionLink("Employee ID", "Index", new { sortOn = "Emp_ID", orderBy = ViewBag.OrderBy, pSortOn = ViewBag.SortOn, keyword = ViewBag.Keyword })
                    </th>
                    <th>
                        @Html.ActionLink("First Name", "Index", new { sortOn = "Emp_First_Name", orderBy = ViewBag.OrderBy, pSortOn = ViewBag.SortOn, keyword = ViewBag.Keyword })
                    </th>
                    <th>
                        @Html.ActionLink("Last Name", "Index", new { sortOn = "Emp_Last_Name", orderBy = ViewBag.OrderBy, pSortOn = ViewBag.SortOn, keyword = ViewBag.Keyword })
                    </th>
                    <th>
                        @Html.ActionLink("Date of Birth", "Index", new { sortOn = "Emp_Date_of_Birth", orderBy = ViewBag.OrderBy, pSortOn = ViewBag.SortOn, keyword = ViewBag.Keyword })
                    </th>
                    <th>
                        @Html.ActionLink("Date of Joining", "Index", new { sortOn = "Emp_Date_of_Joining", orderBy = ViewBag.OrderBy, pSortOn = ViewBag.SortOn, keyword = ViewBag.Keyword })
                    </th>
                    <th style="width:55px;">
                        @Html.ActionLink("Department", "Index", new { sortOn = "Emp_Dept_ID", orderBy = ViewBag.OrderBy, pSortOn = ViewBag.SortOn, keyword = ViewBag.Keyword })
                    </th>
                    <th>
                        @Html.ActionLink("Grade", "Index", new { sortOn = "Emp_Grade", orderBy = ViewBag.OrderBy, pSortOn = ViewBag.SortOn, keyword = ViewBag.Keyword, @style = "margin-right:17px;" })
                    </th>
                    <th style="width:55px;">
                        @Html.ActionLink("Designation", "Index", new { sortOn = "Emp_Designation", orderBy = ViewBag.OrderBy, pSortOn = ViewBag.SortOn, keyword = ViewBag.Keyword })
                    </th>
                    <th>
                        @Html.ActionLink("Basic", "Index", new { sortOn = "Emp_Basic", orderBy = ViewBag.OrderBy, pSortOn = ViewBag.SortOn, keyword = ViewBag.Keyword })
                    </th>
                    <th>
                        @Html.ActionLink("Gender", "Index", new { sortOn = "Emp_Gender", orderBy = ViewBag.OrderBy, pSortOn = ViewBag.SortOn, keyword = ViewBag.Keyword })
                    </th>
                    <th width="100px">
                        @Html.ActionLink("Marital Status", "Index", new { sortOn = "Emp_Marital_Status", orderBy = ViewBag.OrderBy, pSortOn = ViewBag.SortOn, keyword = ViewBag.Keyword })
                    </th>
                    <th width="100px">
                        @Html.ActionLink("Home Address", "Index", new { sortOn = "Emp_Home_Address", orderBy = ViewBag.OrderBy, pSortOn = ViewBag.SortOn, keyword = ViewBag.Keyword })
                    </th>
                    <th>
                        @Html.ActionLink("Contact", "Index", new { sortOn = "Emp_Contact_Num", orderBy = ViewBag.OrderBy, pSortOn = ViewBag.SortOn, keyword = ViewBag.Keyword })
                    </th>
                    <th style="width:69px;">
                        @Html.Label("Action", new { @style = "margin-right:5px;" })
                    </th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Emp_ID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Emp_First_Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Emp_Last_Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Emp_Date_of_Birth)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Emp_Date_of_Joining)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Emp_Dept_ID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Emp_Grade)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Emp_Designation)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Emp_Basic)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Emp_Gender)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Emp_Marital_Status)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Emp_Home_Address)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Emp_Contact_Num)
                        </td>

                        <td style=" display: flex;justify-content: flex-start; margin-left: 22px; margin-top: 23px;">
                            <a href="@Url.Action("Details", "Employee", new { id = item.Emp_ID })" data-toggle="tooltip"><i class="material-icons">&#xE417;</i></a>
                            @if (ViewBag.UserType == "S")
                            {
                                <a href="@Url.Action("Edit", "Employee", new { id = item.Emp_ID })" class="edit" title="Edit" data-toggle="tooltip"><i class="material-icons">&#xE254;</i></a>
                                <a href="@Url.Action("Delete", "Employee", new { id = item.Emp_ID })" class="delete" title="Delete" data-toggle="tooltip"><i class="material-icons">&#xE872;</i></a>
                            }
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>
</div>
@if (ViewBag.Added)
{
    <script type="text/javascript">
        $(function () {
            alert("Employee Added Successfully");
        });
    </script>
}
@if (ViewBag.Updated)
{
<script>alert("Updated Successfully")</script>

}
@if (ViewBag.Deleted)
{
<script>alert("Deleted Successfully")</script>

}

<div class="pagedList">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, orderBy = ViewBag.OrderBy,  keyword = ViewBag.Keyword }),
PagedListRenderOptions.ClassicPlusFirstAndLast)
</div>
